# arientosend_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/ec2-user/arientosend/arientosend/arientosend.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}


server {
	listen 80 ;
	listen [::]:80 ;
	charset     utf-8;
	client_max_body_size 75M;   # adjust to taste

	server_name ec2-54-172-241-8.compute-1.amazonaws.com;
	return 301 https://$host$request_uri;
}

server {
	listen       443 ssl;
	listen       [::]:443 ssl;
	server_name ec2-54-172-241-8.compute-1.amazonaws.com; # substitute your machine's IP address or FQDN
	charset     utf-8;

	client_max_body_size 75M;   # adjust to taste

	root         /usr/share/nginx/html;

	ssl_certificate "/etc/pki/nginx/server.crt";
	ssl_certificate_key "/etc/pki/nginx/private/server.key";
	# It is *strongly* recommended to generate unique DH parameters

	# Generate them with: openssl dhparam -out /etc/pki/nginx/dhparams.pem 2048
	#ssl_dhparam "/etc/pki/nginx/dhparams.pem";
	ssl_session_cache shared:SSL:1m;
	ssl_session_timeout  10m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-D$
	ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
	ssl_prefer_server_ciphers on;

	# Load configuration files for the default server block.
#	include /etc/nginx/default.d/*.conf;

	  location /static {
	alias /usr/share/nginx/html/arientosend/static;
	}

	# Finally, send all non-media requests to the Django server.
	location / {
	uwsgi_pass  django;
	include     /home/ec2-user/arientosend/arientosend/uwsgi_params; # the uwsgi_params file you in$
	}

}

